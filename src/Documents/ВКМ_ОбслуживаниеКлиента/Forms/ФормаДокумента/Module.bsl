#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Параметры.СообщитьОбИзмененияхВТелеграм = Ложь;
	НовыйДок = Ложь;
	ОшибкаВКМ = ПроверитьДатуДоговораОбслуживания(ТекущийОбъект);
	Если ОшибкаВКМ 
		И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если (Объект.Ссылка.Пустая() ИЛИ Параметры.Ключ.Пустая()) 
		И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда	
		НовыйДок = Истина;
	КонецЕсли;
	
КонецПроцедуры  

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если СообщитьОбИзменениях Тогда
		СообщитьОбИзмененияхВТелеграм(ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение 
		ИЛИ (ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись И ТекущийОбъект.Проведен) Тогда
		Если НЕ Объект.Ссылка.Пустая() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
			|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
			|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПлан,
			|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРаботПлан
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			СообщитьОбИзменениях = Ложь;
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Если ТекущийОбъект.Специалист <> ВыборкаДетальныеЗаписи.Специалист 
					ИЛИ ТекущийОбъект.ДатаПроведенияРабот <> ВыборкаДетальныеЗаписи.ДатаПроведенияРабот
					ИЛИ ТекущийОбъект.ВремяНачалаРаботПлан <> ВыборкаДетальныеЗаписи.ВремяНачалаРаботПлан
					ИЛИ ТекущийОбъект.ВремяОкончанияРаботПлан <> ВыборкаДетальныеЗаписи.ВремяОкончанияРаботПлан
					ИЛИ (НЕ ТекущийОбъект.Проведен И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение)
					Тогда СообщитьОбИзменениях = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе  СообщитьОбИзменениях = Истина; // сообщаяем о проводимых и НОВЫХ объектах
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти      

#Область СлужебныеПроцедурыИФункции
&НаСервере 
Функция ПроверитьДатуДоговораОбслуживания(ТекущийОбъект)
	
	ОшибкаВКМ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ВКМ_ДатаДействияС,
	|	ДоговорыКонтрагентов.ВКМ_ДатаДействияПо,
	|	ДоговорыКонтрагентов.Представление
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	ДоговорДокумента = ТекущийОбъект.Договор;
	Запрос.УстановитьПараметр("Ссылка", ДоговорДокумента);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДатаДокумента = ТекущийОбъект.Дата;
		ДатаДоговораС = НачалоДня(ВыборкаДетальныеЗаписи.ВКМ_ДатаДействияС);
		ДатаДоговораПО = КонецДня(ВыборкаДетальныеЗаписи.ВКМ_ДатаДействияПо);
		ВидДоговора = ВыборкаДетальныеЗаписи.ВидДоговора;
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
			Если ДатаДокумента >= ДатаДоговораС
				И ДатаДокумента <= ДатаДоговораПО Тогда
				Возврат ОшибкаВКМ
			Иначе 
				СообщениеВКМ = Новый СообщениеПользователю();
				ТекстСообщения = СтрШаблон("Дата документа не входит период действия договора. Дата действия договора: '%1', с %2 по %3.",
				ВыборкаДетальныеЗаписи.Представление, ДатаДоговораС, ДатаДоговораПО);
				СообщениеВКМ.Текст = ТекстСообщения;
				СообщениеВКМ.Сообщить();
				ОшибкаВКМ = Истина;
				Возврат ОшибкаВКМ
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

//При записи документа Обслуживание клиента, если документ записывается первый раз 
//или если дата, время или специалист изменились, 
//добавьте в справочник сообщение с текстом, описывающим изменения.
&НаСервере 
Процедура СообщитьОбИзмененияхВТелеграм(ТекущийОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПлан,
	|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРаботПлан,
	|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата,
	|	ВКМ_ОбслуживаниеКлиента.Номер КАК Номер
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СообщитьОбИзменениях = Ложь;
	БазовыйТекст = "";
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		БазовыйТекст = СтрШаблон("Специалистом назначен: %1
		|Дата выполнения: %2 
		|с %3 по %4",ВыборкаДетальныеЗаписи.Специалист
		,Формат(ВыборкаДетальныеЗаписи.ДатаПроведенияРабот,"ДФ=dd.MM.yyyy")
		,Формат(ВыборкаДетальныеЗаписи.ВремяНачалаРаботПлан, "ДЛФ=T")
		,Формат(ВыборкаДетальныеЗаписи.ВремяОкончанияРаботПлан, "ДЛФ=T"));
	КонецЕсли;
	
	Если НовыйДок Тогда
		ТекстСообщения = СтрШаблон("Создана новая заявка: %1 от %2 
		|",ВыборкаДетальныеЗаписи.Номер,ВыборкаДетальныеЗаписи.Дата) + БазовыйТекст;
	Иначе
		ТекстСообщения = СтрШаблон("Изменена заявка: %1 от %2, актуальные данные: 
		|",ВыборкаДетальныеЗаписи.Номер,ВыборкаДетальныеЗаписи.Дата) + БазовыйТекст;   
	КонецЕсли;
	
	СообщениеДляТелеграмБота = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	СообщениеДляТелеграмБота.ТекстСообщения = ТекстСообщения;
	СообщениеДляТелеграмБота.Записать();
	
КонецПроцедуры

#КонецОбласти     

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
