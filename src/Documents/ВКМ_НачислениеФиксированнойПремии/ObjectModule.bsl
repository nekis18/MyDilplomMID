
#Область ОбработчикиСобытий
#Если НаСервере Тогда
Процедура ОбработкаПроведения(Отказ, Режим)
	
	СформироватьДвижения();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
#КонецЕсли	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Если НаСервере Тогда
Процедура СформироватьДвижения()
	
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	РазоваяПремия = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.РазоваяПремия;
	
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		
		// регистр ВКМ_ДополнительныеНачисления
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = РазоваяПремия;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		База = ТекСтрокаНачисления.СуммаПремии;
		РезультатСтруктура = ВКМ_ЗарплатаВызовСервера.ПолчитьСуммуВыдачиИСуммуНДФЛ(База);
		ЗПНаруки = РезультатСтруктура.ЗПНаруки;
		Движение.Сумма = ЗПНаруки;
		Движение.СуммаНДФЛ = РезультатСтруктура.НДФЛ;
		Движение.База = База;
		
		// регистр ВКМ_ДополнительныеНачисления
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		Движение.Сумма = ЗПНаруки;
		
	КонецЦикла;
	
КонецПроцедуры
#КонецЕсли	
#КонецОбласти





