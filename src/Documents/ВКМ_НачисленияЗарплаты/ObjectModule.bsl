
#Область ОбработчикиСобытий
#Если НаСервере Тогда
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Отказ = СформироватьДвижения(Отказ);
	
	Если НЕ Отказ Тогда
		Движения.ВКМ_ОсновныеНачисления.Записать();
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
		
		РассчитатьОкладСервер();
		РассчитатьПроцентыСпециалистам();
		РассчитатьОтпуск();
		СформироватьЗарплатуКВыплате();
	КонецЕсли;
	
КонецПроцедуры
#КонецЕсли
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Если НаСервере Тогда
Функция СформироватьДвижения(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачало КАК ДатаНачало,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаКонец КАК ДатаКонец,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидНачисления КАК ВидНачисления
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыНачисления.ВидНачисления = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.НомерСтроки,
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачало,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаКонец,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидНачисления
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыНачисления.ВидНачисления = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаРаботы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.НомерСтроки,
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачало,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаКонец,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидНачисления
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыНачисления.ВидНачисления = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Специалист КАК Специалист,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_УсловияНачислений
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|			&НачалоПериода,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_МинимальныйОклад.Значение, 0) КАК МинимальныйОклад
	|ПОМЕСТИТЬ ВТ_МинимальныйОклад
	|ИЗ
	|	Константа.ВКМ_МинимальныйОклад КАК ВКМ_МинимальныйОклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДокумента.ДатаНачало КАК ДатаНачало,
	|	ВТ_ДанныеДокумента.ДатаКонец КАК ДатаКонец,
	|	ВТ_ДанныеДокумента.ВидНачисления КАК ВидНачисления,
	|	ЕСТЬNULL(ВТ_УсловияНачислений.Оклад, 0) КАК СотрудникаОклад,
	|	ЕСТЬNULL(ВТ_МинимальныйОклад.МинимальныйОклад, 0) КАК МинимальныйОклад,
	|	ВТ_УсловияНачислений.Специалист КАК Специалист,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ВТ_УсловияНачислений.Специалист
	|				ТОГДА ВТ_МинимальныйОклад.МинимальныйОклад
	|			ИНАЧЕ ВТ_УсловияНачислений.Оклад
	|		КОНЕЦ, 0) КАК Оклад,
	|	ВТ_УсловияНачислений.ПроцентОтРабот КАК ПроцентОтРабот
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УсловияНачислений КАК ВТ_УсловияНачислений
	|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_УсловияНачислений.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МинимальныйОклад КАК ВТ_МинимальныйОклад
	|		ПО (ИСТИНА)";
	
	НачалоПериода = НачалоМесяца(ДобавитьМесяц(Дата,-1));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	//Проверки перед проведением...
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПроцентОтРабот = NULL 
			И Выборка.Специалист = Истина Тогда
			СообщениеОПроценте = Новый СообщениеПользователю;
			ТекстС = СтрШаблон("Сотрудник %1 является специалистом, у него не установлен процент начисления от выполненных работ. См. Условия оплаты сотрудников.",
			Выборка.Специалист);
			СообщениеОПроценте.Текст = ТекстС;
			СообщениеОПроценте.Сообщить();
			Отказ = Истина;
		Иначе Продолжить
		КонецЕсли;
	КонецЦикла;
	Если Отказ Тогда
		Возврат Отказ
	КонецЕсли;
	
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		// регистр ВКМ_ОсновныеНачисления - Оклады
		ОснНачОклад = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
		ОснНачПроцентЗаРаботы = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаРаботы;
		ОснНачОтпуск = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск;
		
		Если Выборка.ВидНачисления = ОснНачОклад Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ОснНачОклад;
			Движение.ПериодДействияНачало = Выборка.ДатаНачало;
			Движение.ПериодДействияКонец = Выборка.ДатаКонец;
			Движение.ПериодРегистрации = Выборка.ДатаНачало;
			Движение.Сотрудник = Выборка.Сотрудник;
			//для минимального оклада по хорошему нужно вести записи в РС так как данные могут меняться, но... 
			Движение.База = Выборка.Оклад;
			
			// регистр ВКМ_ОсновныеНачисления - ПроцентЗаРаботы
		ИначеЕсли Выборка.ВидНачисления = ОснНачПроцентЗаРаботы Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ОснНачПроцентЗаРаботы;
			Движение.ПериодДействияНачало = Выборка.ДатаНачало;
			Движение.ПериодДействияКонец = Выборка.ДатаКонец;
			Движение.ПериодРегистрации = Выборка.ДатаНачало;
			Движение.Сотрудник = Выборка.Сотрудник;
			
			// регистр ВКМ_ОсновныеНачисления - ПроцентЗаРаботы
		ИначеЕсли Выборка.ВидНачисления = ОснНачОтпуск Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ОснНачОтпуск;
			Движение.ПериодДействияНачало = Выборка.ДатаНачало;
			Движение.ПериодДействияКонец = Выборка.ДатаКонец;
			Движение.ПериодРегистрации = Выборка.ДатаНачало;
			Движение.БазовыйПериодНачало = ДобавитьМесяц(Выборка.ДатаНачало,-12);
			Движение.БазовыйПериодКонец = КонецДня(Выборка.ДатаНачало-(60*60*24));
			Движение.Сотрудник = Выборка.Сотрудник;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Отказ
	
КонецФункции
#КонецЕсли
#Если НаСервере Тогда
Процедура РассчитатьОкладСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК ЗначениеПериодДействия,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ЗначениеФактическийПериодДействия,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Ссылка
	|				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДЗ = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДЗ.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДЗ.НомерСтроки-1]; 
		РабДниПлан = ВыборкаДЗ.ЗначениеПериодДействия;
		РабДниФакт = ВыборкаДЗ.ЗначениеФактическийПериодДействия;
		Если РабДниПлан = 0 Тогда
			Движение.Сумма = 0;
			Движение.СуммаНДФЛ = 0;
		Иначе
			СуммаБаза = Движение.База;
			Если РабДниПлан = РабДниФакт Тогда
				СуммаБазаФакт = СуммаБаза;
			иначе
				СуммаБазаФакт = СуммаБаза / РабДниПлан * РабДниФакт;
			КонецЕсли; 
			База = СуммаБазаФакт;
			//РезультатСтруктура = ВКМ_ЗарплатаСервер.ПолчитьСуммуВыдачиИСуммуНДФЛ(База);
			РезультатСтруктура = ВКМ_ЗарплатаВызовСервера.ПолчитьСуммуВыдачиИСуммуНДФЛ(База);
			Движение.Сумма = РезультатСтруктура.ЗПНаруки;
			Движение.СуммаНДФЛ = РезультатСтруктура.НДФЛ;
			Движение.ДнейОтработано = РабДниФакт;
		КонецЕсли;
	КонецЦикла; 
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
КонецПроцедуры      
#КонецЕсли
#Если НаСервере Тогда
Процедура РассчитатьПроцентыСпециалистам() 
	
	//Собираем данные по выполненным операциям с ДатыНачало по ДатаКонец из ТЧ 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Ссылка
	|				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаРаботы)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ВыполненныеСотрудникомРаботыОстатки.Сотрудник КАК Сотрудник,
	|	ВКМ_ВыполненныеСотрудникомРаботыОстатки.ЧасовКОплатеОстаток КАК ЧасовКОплатеОстаток,
	|	ВКМ_ВыполненныеСотрудникомРаботыОстатки.СуммаКОплатеОстаток КАК СуммаКОплатеОстаток
	|ПОМЕСТИТЬ ВТ_ВыполненныеРаботы
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Остатки(
	|			&НачалоПериода,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_ВыполненныеСотрудникомРаботыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕстьNULL(ВТ_ВыполненныеРаботы.ЧасовКОплатеОстаток, 0) КАК ЧасовКОплатеОстаток,
	|	ЕстьNULL(ВТ_ВыполненныеРаботы.СуммаКОплатеОстаток, 0) КАК СуммаКОплатеОстаток,
	|	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыполненныеРаботы КАК ВТ_ВыполненныеРаботы
	|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_ВыполненныеРаботы.Сотрудник";
	
	НачалоПериода = НачалоМесяца(Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(); 
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Пока Выборка.Следующий() Цикл
		База = Выборка.СуммаКОплатеОстаток;
		ЧасовКОплатеОстаток = Выборка.ЧасовКОплатеОстаток;
		СуммаКОплатеОстаток = База;
		Сотрудник = Выборка.Сотрудник;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки-1];
		Если СуммаКОплатеОстаток = 0 
			ИЛИ База = 0 Тогда
			Продолжить
		Иначе
			Движение.База = База;
			РезультатСтруктура = ВКМ_ЗарплатаВызовСервера.ПолчитьСуммуВыдачиИСуммуНДФЛ(База);
			Движение.Сумма = РезультатСтруктура.ЗПНаруки;
			Движение.СуммаНДФЛ = РезультатСтруктура.НДФЛ;
		КонецЕсли;
		
		// регистр ВКМ_ВыполненныеСотрудникомРаботы
		ДвижениеВСС = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		ДвижениеВСС.ВидДвижения = ВидДвиженияНакопления.Расход;
		ДвижениеВСС.Период = Дата;
		ДвижениеВСС.Сотрудник = Сотрудник;
		ДвижениеВСС.ЧасовКОплате = ЧасовКОплатеОстаток;
		ДвижениеВСС.СуммаКОплате = СуммаКОплатеОстаток;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	
	
КонецПроцедуры
#КонецЕсли
#Если НаСервере Тогда
Процедура РассчитатьОтпуск()
	
	//Собираем данные по выполненным операциям с ДатыНачало по ДатаКонец из ТЧ 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0) КАК СуммаБаза,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаНДФЛБаза, 0) КАК СуммаНДФЛБаза,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	""Доп"" КАК ВидРР
	|ПОМЕСТИТЬ ВТ_Базы
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	|			&Измерения,
	|			&Измерения,
	|			,
	|			ВидРасчета = &ВидРасчета
	|				И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0),
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаНДФЛБаза, 0),
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодКонец,
	|	""Осн""
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	|			&Измерения,
	|			&Измерения,
	|			,
	|			ВидРасчета = &ВидРасчета
	|				И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Базы.НомерСтроки КАК НомерСтроки,
	|	ВТ_Базы.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_Базы.СуммаБаза) КАК СуммаБаза,
	|	СУММА(ВТ_Базы.СуммаНДФЛБаза) КАК СуммаНДФЛБаза,
	|	ВТ_Базы.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТ_Базы.БазовыйПериодКонец КАК БазовыйПериодКонец
	|ПОМЕСТИТЬ ВТ_БазовыеСуммы
	|ИЗ
	|	ВТ_Базы КАК ВТ_Базы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Базы.Сотрудник,
	|	ВТ_Базы.НомерСтроки,
	|	ВТ_Базы.БазовыйПериодНачало,
	|	ВТ_Базы.БазовыйПериодКонец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_БазовыеСуммы.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТ_БазовыеСуммы.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТ_БазовыеСуммы.СуммаБаза КАК СуммаБаза,
	|	ВТ_БазовыеСуммы.СуммаНДФЛБаза КАК СуммаНДФЛБаза,
	|	ВТ_БазовыеСуммы.Сотрудник КАК Сотрудник,
	|	ВТ_БазовыеСуммы.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ГрафикиРаботы.ГрафикРаботы КАК ГрафикРаботы,
	|	СУММА(ЕСТЬNULL(ВКМ_ГрафикиРаботы.Значение, 0)) КАК КолвоРабочихДней
	|ИЗ
	|	ВТ_БазовыеСуммы КАК ВТ_БазовыеСуммы,
	|	РегистрСведений.ВКМ_ГрафикиРаботы КАК ВКМ_ГрафикиРаботы
	|ГДЕ
	|	ВКМ_ГрафикиРаботы.Дата МЕЖДУ ВТ_БазовыеСуммы.БазовыйПериодНачало И ВТ_БазовыеСуммы.БазовыйПериодКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_БазовыеСуммы.БазовыйПериодНачало,
	|	ВТ_БазовыеСуммы.БазовыйПериодКонец,
	|	ВТ_БазовыеСуммы.СуммаБаза,
	|	ВТ_БазовыеСуммы.СуммаНДФЛБаза,
	|	ВТ_БазовыеСуммы.Сотрудник,
	|	ВТ_БазовыеСуммы.НомерСтроки,
	|	ВКМ_ГрафикиРаботы.ГрафикРаботы";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	НачалоПериода = НачалоМесяца(Дата);
	ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск;
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(); 
	
	
	//(Начисленная сумма за 12 мес. / Количество рабочих дней) х Количество календарных дней отпуска
	Пока Выборка.Следующий() Цикл
		
		НачисленнаяСуммаЗаГод = Выборка.СуммаБаза + Выборка.СуммаНДФЛБаза;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки-1];
		//Получим КоличествоКалендарныхДнейОтпуска
		//+ как должна обигрываться ситуация если сотрудник не работал в компании и т.п. 
		//поэтому сейчас - чем меньше он работал в компании до ГОДА, тем меньше у него стоимость дня в отпуске
		КолвоРабочихДней = Выборка.КолвоРабочихДней;
		КоличествоКалендарныхДнейОтпуска = (НачалоДня(Движение.ПериодДействияКонец) - НачалоДня(Движение.ПериодДействияНачало)) / (60 * 60 * 24);
		
		//(Начисленная сумма за 12 мес. / Количество рабочих дней) х Количество календарных дней отпуска
		Если КолвоРабочихДней = 0 ИЛИ КолвоРабочихДней = Неопределено Тогда
			Движение.Сумма = 0;
			Движение.СуммаНДФЛ = 0;
		Иначе
			База = (НачисленнаяСуммаЗаГод / КолвоРабочихДней ) * КоличествоКалендарныхДнейОтпуска;
			Движение.База = База;
			РезультатСтруктура = ВКМ_ЗарплатаВызовСервера.ПолчитьСуммуВыдачиИСуммуНДФЛ(База);
			Движение.Сумма = РезультатСтруктура.ЗПНаруки;
			Движение.СуммаНДФЛ = РезультатСтруктура.НДФЛ;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	
КонецПроцедуры
#КонецЕсли
#Если Сервер Тогда
Процедура СформироватьЗарплатуКВыплате() // ВТОРАЯ версия по ТЗ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_ОсновныеНачисления.Сторно КАК Сторно,
	|	ВЫБОР
	|		КОГДА ВКМ_ОсновныеНачисления.Сторно = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВКМ_ОсновныеНачисления.Сумма, 0) * -1
	|		ИНАЧЕ ЕСТЬNULL(ВКМ_ОсновныеНачисления.Сумма, 0)
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВКМ_ОсновныеНачисления.Сторно = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВКМ_ОсновныеНачисления.СуммаНДФЛ, 0) * -1
	|		ИНАЧЕ ЕСТЬNULL(ВКМ_ОсновныеНачисления.СуммаНДФЛ, 0)
	|	КОНЕЦ КАК СуммаНДФЛ,
	|	ВКМ_ОсновныеНачисления.База КАК База
	|ПОМЕСТИТЬ ВТ_ДанныеНачислений
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.ПериодРегистрации,
	|	ВКМ_ДополнительныеНачисления.НомерСтроки,
	|	ВКМ_ДополнительныеНачисления.Сотрудник,
	|	ВКМ_ДополнительныеНачисления.ВидРасчета,
	|	ВКМ_ДополнительныеНачисления.Сторно,
	|	ВЫБОР
	|		КОГДА ВКМ_ДополнительныеНачисления.Сторно = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Сумма, 0) * -1
	|		ИНАЧЕ ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Сумма, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВКМ_ДополнительныеНачисления.Сторно = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВКМ_ДополнительныеНачисления.СуммаНДФЛ, 0) * -1
	|		ИНАЧЕ ЕСТЬNULL(ВКМ_ДополнительныеНачисления.СуммаНДФЛ, 0)
	|	КОНЕЦ,
	|	ВКМ_ДополнительныеНачисления.База
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_Удержания.ПериодРегистрации,
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_Удержания.Сотрудник,
	|	ВКМ_Удержания.ВидРасчета,
	|	ВКМ_Удержания.Сторно,
	|	ВЫБОР
	|		КОГДА ВКМ_Удержания.Сторно = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВКМ_Удержания.Сумма, 0)
	|		ИНАЧЕ ЕСТЬNULL(ВКМ_Удержания.Сумма, 0) * -1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВКМ_Удержания.Сторно = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВКМ_Удержания.СуммаНДФЛ, 0)
	|		ИНАЧЕ ЕСТЬNULL(ВКМ_Удержания.СуммаНДФЛ, 0) * -1
	|	КОНЕЦ,
	|	ВКМ_Удержания.База
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеНачислений.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_ДанныеНачислений.Сумма) КАК Сумма,
	|	СУММА(ВТ_ДанныеНачислений.СуммаНДФЛ) КАК СуммаНДФЛ
	|ИЗ
	|	ВТ_ДанныеНачислений КАК ВТ_ДанныеНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеНачислений.Сотрудник";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Пока Выборка.Следующий() Цикл
		//НомерСтроки, Сотрудник, ВидРасчета
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма;
	КонецЦикла;
	
	
КонецПроцедуры
#КонецЕсли
#КонецОбласти



